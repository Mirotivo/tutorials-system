@{
    ViewData["Title"] = "Register";
}

<div id="app" class="text-center">
    <h3>Register</h3>
    <form v-on:submit.prevent="register">
        <div class="form-group">
            <label for="Register_Email">Email address</label>
            <input type="text" id="Register_Email" class="form-control" placeholder="example@gmail.com"
                v-model="registerModel.Email" />
            <!-- Add validation messages if needed -->
        </div>
        <div class="form-group">
            <label for="Register_Password">Password</label>
            <input type="password" id="Register_Password" class="form-control" placeholder="password"
                v-model="registerModel.Password" />
            <!-- Add validation messages if needed -->
        </div>
        <div class="form-group">
            <label for="Confirm_Password">Confirm Password</label>
            <input type="password" id="Confirm_Password" class="form-control" placeholder="confirm password"
                v-model="registerModel.ConfirmPassword" />
            <!-- Add validation messages if needed -->
        </div>
        <button type="submit" class="btn btn-primary" :disabled="!isFormValid">Register</button>
    </form>
</div>

@section Scripts {
    <script>
        const app = new Vue({
            el: '#app',
            data: {
                invalidLogin: false,
                registerModel: {
                    Email: '',
                    Password: '',
                    ConfirmPassword: ''
                },
                emailInvalid: false,
            },
            computed: {
                isFormValid() {
                    const isEmailValid = this.isValidEmail(this.registerModel.Email);
                    return (
                        this.registerModel.Email.trim() !== '' &&
                        this.registerModel.Password.trim() !== '' &&
                        isEmailValid
                    );
                },
            },

            methods: {
                async register() {
                    try {
                        const response = await fetch('https://localhost:9000/api/users/register', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                email: this.registerModel.Email,
                                password: this.registerModel.Password,
                                confirmPassword: this.registerModel.ConfirmPassword,
                            }),
                        });

                        if (response.ok) {
                            // Registration successful, you can handle this as needed
                            // For example, you can display a success message or redirect to a login page.
                        } else {
                            // Handle registration errors
                            console.error('Registration failed');
                        }
                    } catch (error) {
                        console.error(error);
                    }
                },

                isValidEmail(email) {
                    const emailPattern = /^[A-Za-z0-9._%-]+@@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$/;
                    return emailPattern.test(email);
                },
            }
        });
    </script>
}